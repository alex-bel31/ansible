---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
        enabled: true
  tasks:
    - name: Try to download all ClickHouse packages, fallback if failed
      block:
        - name: Get all the packages
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse/{{ item }}_{{ clickhouse_version }}_amd64.deb"
            dest: "/tmp/{{ item }}_{{ clickhouse_version }}_amd64.deb"
            mode: '0644'
          loop: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib fallback
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "/tmp/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            mode: '0644'
    - name: Install clickhouse-common-static package first
      become: true
      ansible.builtin.apt:
        deb: "/tmp/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"

    - name: Install clickhouse-client and clickhouse-server packages
      become: true
      ansible.builtin.apt:
        deb: "/tmp/{{ item }}_{{ clickhouse_version }}_amd64.deb"
      loop:
        - clickhouse-client
        - clickhouse-server
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: clickhouse
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
        enabled: true

  tasks:
    - name: Create a directory to install vector
      ansible.builtin.file:
        path: "{{ vector_install_dir }}"
        state: directory
        mode: '0755'
      become: true

    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "{{ vector_url }}"
        dest: "/tmp/vector.tar.gz"
        mode: '0644'
        force: true

    - name: Unzip vector distrib
      ansible.builtin.unarchive:
        src: "/tmp/vector.tar.gz"
        dest: "{{ vector_install_dir }}"
        remote_src: true
        extra_opts: [--strip-components=1]
      become: true

    - name: Ensure directory for vector config exists
      ansible.builtin.file:
        path: "{{ vector_config_path | dirname }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      become: true

    - name: Template config vector
      ansible.builtin.template:
        src: "templates/vector.toml.j2"
        dest: "{{ vector_config_path }}"
        owner: root
        group: root
        mode: '0644'
      become: true
      notify: Start vector service
